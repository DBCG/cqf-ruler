language: java
jdk: openjdk11
os: linux
dist: xenial
services:
- docker
cache:
  timeout: 180
  directories:
  - "$HOME/.m2/repository"
install:
- mvn install -U -DskipTests=true -Dmaven.javadoc.skip=true -B -V
script:
- if [[ "$TRAVIS_BRANCH" =~ master* ]]; then mvn test -B -P release; fi
- if ! [[ "$TRAVIS_BRANCH" =~ master* ]]; then mvn test -B; fi
before_deploy:
- if [[ "$TRAVIS_BRANCH" =~ master* ]]; then echo $GPG_SECRET_KEYS | base64 --decode
  | $GPG_EXECUTABLE --import; fi
- if [[ "$TRAVIS_BRANCH" =~ master* ]]; then echo $GPG_OWNERTRUST | base64 --decode
  | $GPG_EXECUTABLE --import-ownertrust; fi
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
deploy:
- provider: script
  script: cp .travis.settings.xml $HOME/.m2/settings.xml && mvn deploy -DskipTests=true
    && docker build . -t contentgroup/cqf-ruler:develop && docker push contentgroup/cqf-ruler:develop
  cleanup: false
  skip_cleanup: true
  on:
    branch: develop
- provider: script
  script: cp .travis.settings.xml $HOME/.m2/settings.xml && mvn deploy -P release
    -DskipTests=true  && docker build . -t contentgroup/cqf-ruler && docker push contentgroup/cqf-ruler
  cleanup: false
  skip_cleanup: true
  on:
    branch: master
before_cache:
- rm -rf $HOME/.m2/repository/org/opencds/cqf/parent
- rm -rf $HOME/.m2/repository/org/opencds/cqf/common
- rm -rf $HOME/.m2/repository/org/opencds/cqf/dstu3
- rm -rf $HOME/.m2/repository/org/opencds/cqf/r4
- rm -rf $HOME/.m2/repository/org/opencds/cqf/cqf-ruler-dstu3
- rm -rf $HOME/.m2/repository/org/opencds/cqf/cqf-ruler-r4
notifications:
  slack:
    rooms:
      secure: PDB1pyN2TuKQ3Leafmyp1+DeHGJjh3oGSo+FVvoJELaMuwz+Ex4wEvFCmCgXwa6yA/AOl+BTAIByKgSHl3BeQ/5bdmy09nUJfW2sThqqOpqf9wMqdQyPIPs1W3rp9UDglVBMdPnwaCjab2amDfy//CyDGXt4E5KlIvxSpsF7Nb3Qm5rBWWXTkPmdM6tSxTybY2pAV0cHOnYoXQnDpEE19RDWcpihM0Z0fRmkF3HUzpnPJ4GqSUu8NDKVOEYZxrV7f+osnBeWLLbcUxY5Aw3om5C96ZbHn2YsxI5+jo9BfAlHsyuHkqoUjeF1O0Yd1J/ru8fgX2tN32BS3XSiqimWoXVz8p6fu44Usg92leFgLbfNN2XEdbjFI470435B6oRXCuAFS6HCA2j6Ovi3l8hxtWmBDRxLxcgF6Q2BvzzM/6y5W2aDTQ0CuhSV4n4mKSPAGg3hm1U1oyJBIdKzntcrE7tCcTzLeC1rCRnLGEFgz45UsRUwFOXlIZy0n8WyqYUv8deEHqa+IM17YbTgRericBFim4X7H6GdOsWn1dUTuzmX/MOWjEY5LDFPUDWE3CbjGbo6e8R/VRhAM5pIilFbaa7pr1h/P7hdEV3WiW1L2XryttEkVxEwS4EEGwaxpDOK8u2IYiWhu4pj/j52xIdMtBhvPc3qZQXql/W8eQNtI1A=
